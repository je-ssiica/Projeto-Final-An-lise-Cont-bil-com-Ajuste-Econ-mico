# -*- coding: utf-8 -*-
"""ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r-JyqNpaGTmSyKjl7p-435i8dNA-u0B8

# ðŸ“Š Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico

Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit.

1) Configure o tÃ­tulo na barra do navegador, da pÃ¡gina do projeto no Streamlit e descriÃ§Ã£o inicial do projeto (peso: 1,0)

- TÃ­tulo na barra (`page_title`): Lista de ExercÃ­cios 4
- TÃ­tulo da pÃ¡gina (`header`): Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico
- DescriÃ§Ã£o projeto (`write`): Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

!pip install matplotlib
!pip install ipeadatapy
!pip install streamlit


import pandas as pd
DataFrame = pd.DataFrame

page_title = "Lista de ExercÃ­cios 4"
print(page_title)

header = "Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico"
print(header)

write = "Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit."
print(df)


# st.header("Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico")
# st.write("Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit.")

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

arquivo = ("/content/empresas_dados.csv")
df = pd.read_csv(arquivo, sep=';')
(df.head(len(df)))

"""3) Calcule os indicadores Margem LÃ­quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo grÃ¡fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem LÃ­quida = Lucro LÃ­quido / Receita LÃ­quida * 100
- ROA = Lucro LÃ­quido / Ativo Total *  100
"""

import matplotlib.pyplot as plt

df['Margem LÃ­quida'] = (df['Lucro LÃ­quido'] / df['Receita LÃ­quida']) * 100
df['ROA'] = (df['Lucro LÃ­quido'] / df['Ativo Total']) * 100

df_grouped = df.groupby('Ano')[['Margem LÃ­quida', 'ROA']].mean().reset_index()

plt.figure(figsize=(10,6))
plt.plot(df_grouped['Ano'], df_grouped['Margem LÃ­quida'], marker='o', label='Margem LÃ­quida (%)')
plt.plot(df_grouped['Ano'], df_grouped['ROA'], marker='o', label='ROA (%)')

plt.title('Indicadores Financeiros ao Longo dos Anos')
plt.xlabel('Ano')
plt.ylabel('Percentual (%)')
plt.legend()
plt.grid(True)
plt.show()

"""4) Utilize o pacote ipeadatapy e faÃ§a busca para encontrar o indicador que traga o IPCA, taxa de variaÃ§Ã£o, em % e anual: (peso: 2,0)

- Baixe os dados no perÃ­odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""

!pip install ipeadatapy

import ipeadatapy as ip

import pandas as pd

df_ipca = ip.timeseries('PRECOS12_IPCA12')

df_ipca = df_ipca[(df_ipca['YEAR'] >= 2010) & (df_ipca['YEAR'] <= 2024)]

print("Colunas antes da alteraÃ§Ã£o:")
print(df_ipca.columns)

df_ipca = df_ipca.rename(columns={
    'YEAR': 'Ano',
    'VALUE (-)': 'IPCA'
})

print("\nColunas apÃ³s a alteraÃ§Ã£o:")
print(df_ipca.columns)

print("\nDataFrame resultado:")
df_ipca

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a funÃ§Ã£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conexÃ£o (chave primÃ¡ria) entre elas
- Crie nova coluna chamada Receita Real que serÃ¡ o resultado da Receita LÃ­quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta LÃ­quida - ( Receita LÃ­quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

df_excel = pd.DataFrame({
    'Ano': [2020, 2021, 2022],
    'Receita LÃ­quida': [1000, 1200, 1400]
})

df_ipea = pd.DataFrame({
    'Ano': [2020, 2021, 2022],
    'IPCA': [3.5, 4.0, 5.0]
})

df_combined = pd.merge(df_excel, df_ipea, on='Ano')
df_combined['Receita Real'] = df_combined['Receita LÃ­quida'] * (1 - df_combined['IPCA'] / 100)

df_combined

"""6) Crie grÃ¡fico de linha que apresente as variÃ¡veis Receita LÃ­quida e Receita Real ao longo dos anos (no mesmo grÃ¡fico) (peso: 1,0)"""

import pandas as pd
import matplotlib.pyplot as plt

df_combined = pd.DataFrame({
    'Ano': [2021, 2022, 2023],
    'Receita LÃ­quida': [1000, 1200, 1400],
    'Receita Real': [965, 1152, 1330]
})

plt.figure(figsize=(10,6))
plt.plot(df_combined['Ano'], df_combined['Receita LÃ­quida'], marker='o', label='Receita LÃ­quida')
plt.plot(df_combined['Ano'], df_combined['Receita Real'], marker='s', label='Receita Real')
plt.title('Receita LÃ­quida e Receita Real ao longo dos anos')
plt.xlabel('Ano')
plt.ylabel('Valor')
plt.legend()
plt.grid(True)
plt.show()

"""7) FaÃ§a os ajustes necessÃ¡rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- CaÃ§a os ajustes necessÃ¡rios no projeto para ser publicado no Streamlit
- Crie novo repositÃ³rio pÃºblico no GitHub e leve os arquivos .py e .csv pra lÃ¡. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao repositÃ³rio da lista
"""